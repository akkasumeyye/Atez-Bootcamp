function cov_2ct6ivsaty(){var path="/home/sumeyye/Desktop/atez-bootcamp/Atez-Bootcamp/unit-testing/specs/methodTest.spec.js";var hash="333d55e386994348a3d628418f7501457731e768";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/sumeyye/Desktop/atez-bootcamp/Atez-Bootcamp/unit-testing/specs/methodTest.spec.js",statementMap:{"0":{start:{line:1,column:20},end:{line:1,column:43}},"1":{start:{line:2,column:18},end:{line:2,column:35}},"2":{start:{line:3,column:15},end:{line:3,column:37}},"3":{start:{line:4,column:14},end:{line:4,column:30}},"4":{start:{line:5,column:23},end:{line:5,column:50}},"5":{start:{line:6,column:13},end:{line:6,column:28}},"6":{start:{line:7,column:0},end:{line:7,column:25}},"7":{start:{line:9,column:0},end:{line:33,column:2}},"8":{start:{line:10,column:4},end:{line:12,column:6}},"9":{start:{line:11,column:7},end:{line:11,column:48}},"10":{start:{line:15,column:4},end:{line:23,column:6}},"11":{start:{line:16,column:19},end:{line:16,column:46}},"12":{start:{line:17,column:20},end:{line:17,column:22}},"13":{start:{line:18,column:20},end:{line:18,column:22}},"14":{start:{line:20,column:7},end:{line:20,column:33}},"15":{start:{line:21,column:7},end:{line:21,column:48}},"16":{start:{line:22,column:7},end:{line:22,column:43}},"17":{start:{line:25,column:4},end:{line:32,column:6}},"18":{start:{line:26,column:21},end:{line:26,column:42}},"19":{start:{line:27,column:29},end:{line:27,column:50}},"20":{start:{line:29,column:8},end:{line:29,column:38}},"21":{start:{line:30,column:8},end:{line:30,column:38}},"22":{start:{line:31,column:8},end:{line:31,column:29}},"23":{start:{line:35,column:0},end:{line:41,column:2}},"24":{start:{line:36,column:4},end:{line:40,column:6}},"25":{start:{line:37,column:19},end:{line:37,column:47}},"26":{start:{line:38,column:6},end:{line:38,column:40}},"27":{start:{line:39,column:6},end:{line:39,column:62}},"28":{start:{line:43,column:0},end:{line:52,column:2}},"29":{start:{line:44,column:4},end:{line:51,column:6}},"30":{start:{line:49,column:8},end:{line:49,column:15}},"31":{start:{line:50,column:8},end:{line:50,column:75}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:39},end:{line:9,column:40}},loc:{start:{line:9,column:45},end:{line:33,column:1}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:47},end:{line:10,column:48}},loc:{start:{line:10,column:53},end:{line:12,column:5}},line:10},"2":{name:"(anonymous_2)",decl:{start:{line:15,column:36},end:{line:15,column:37}},loc:{start:{line:15,column:42},end:{line:23,column:5}},line:15},"3":{name:"(anonymous_3)",decl:{start:{line:25,column:41},end:{line:25,column:42}},loc:{start:{line:25,column:47},end:{line:32,column:5}},line:25},"4":{name:"(anonymous_4)",decl:{start:{line:35,column:37},end:{line:35,column:38}},loc:{start:{line:35,column:43},end:{line:41,column:1}},line:35},"5":{name:"(anonymous_5)",decl:{start:{line:36,column:33},end:{line:36,column:34}},loc:{start:{line:36,column:39},end:{line:40,column:5}},line:36},"6":{name:"(anonymous_6)",decl:{start:{line:43,column:31},end:{line:43,column:32}},loc:{start:{line:43,column:37},end:{line:52,column:1}},line:43},"7":{name:"(anonymous_7)",decl:{start:{line:44,column:30},end:{line:44,column:31}},loc:{start:{line:44,column:40},end:{line:51,column:5}},line:44}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"333d55e386994348a3d628418f7501457731e768"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2ct6ivsaty=function(){return actualCoverage;};}return actualCoverage;}cov_2ct6ivsaty();const MethodClass=(cov_2ct6ivsaty().s[0]++,require('../src/index'));const newObject=(cov_2ct6ivsaty().s[1]++,new MethodClass());const expect=(cov_2ct6ivsaty().s[2]++,require('chai').expect);const sinon=(cov_2ct6ivsaty().s[3]++,require('sinon'));const chaiaspromised=(cov_2ct6ivsaty().s[4]++,require('chai-as-promised'));const chai=(cov_2ct6ivsaty().s[5]++,require('chai'));cov_2ct6ivsaty().s[6]++;chai.use(chaiaspromised);cov_2ct6ivsaty().s[7]++;describe.skip('MethodClass Test Suit',()=>{cov_2ct6ivsaty().f[0]++;cov_2ct6ivsaty().s[8]++;it('Should return addition of two params',()=>{cov_2ct6ivsaty().f[1]++;cov_2ct6ivsaty().s[9]++;expect(newObject.add(1,2)).to.be.equal(3);});// spy - mock - stub 
cov_2ct6ivsaty().s[10]++;it('Should spy the ass method',()=>{cov_2ct6ivsaty().f[2]++;const spy=(cov_2ct6ivsaty().s[11]++,sinon.spy(newObject,'add'));const arg1=(cov_2ct6ivsaty().s[12]++,10);const arg2=(cov_2ct6ivsaty().s[13]++,20);cov_2ct6ivsaty().s[14]++;newObject.add(arg1,arg2);cov_2ct6ivsaty().s[15]++;expect(spy.calledWith(10,20)).to.be.true;cov_2ct6ivsaty().s[16]++;expect(spy.calledTwice).to.be.false;});cov_2ct6ivsaty().s[17]++;it('Should mock the greet function',()=>{cov_2ct6ivsaty().f[3]++;const mock=(cov_2ct6ivsaty().s[18]++,sinon.mock(newObject));const expectation=(cov_2ct6ivsaty().s[19]++,mock.expects("greet"));// expectation.returns('Hello World!');
cov_2ct6ivsaty().s[20]++;newObject.anotherMethod(10,20);cov_2ct6ivsaty().s[21]++;expectation.withArgs("Hello");cov_2ct6ivsaty().s[22]++;expectation.verify();});});cov_2ct6ivsaty().s[23]++;describe.skip("Test Suit for stubs",()=>{cov_2ct6ivsaty().f[4]++;cov_2ct6ivsaty().s[24]++;it('Should stub add method',()=>{cov_2ct6ivsaty().f[5]++;const stub=(cov_2ct6ivsaty().s[25]++,sinon.stub(newObject,"add"));cov_2ct6ivsaty().s[26]++;stub.withArgs(10,20).returns(100);cov_2ct6ivsaty().s[27]++;expect(newObject.anotherMethod(10,20)).to.be.equal(100);});});cov_2ct6ivsaty().s[28]++;describe("Promise Test Suit ",()=>{cov_2ct6ivsaty().f[6]++;cov_2ct6ivsaty().s[29]++;it('Should test promise',done=>{cov_2ct6ivsaty().f[7]++;cov_2ct6ivsaty().s[30]++;// newObject.PromiseTetCase()
// .then((result)=> {
//   expect(result).to.be.equal(9)
// })
done();cov_2ct6ivsaty().s[31]++;return expect(newObject.PromiseTetCase()).to.be.eventually.equal(9);});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmN0Nml2c2F0eSIsImFjdHVhbENvdmVyYWdlIiwiTWV0aG9kQ2xhc3MiLCJzIiwicmVxdWlyZSIsIm5ld09iamVjdCIsImV4cGVjdCIsInNpbm9uIiwiY2hhaWFzcHJvbWlzZWQiLCJjaGFpIiwidXNlIiwiZGVzY3JpYmUiLCJza2lwIiwiZiIsIml0IiwiYWRkIiwidG8iLCJiZSIsImVxdWFsIiwic3B5IiwiYXJnMSIsImFyZzIiLCJjYWxsZWRXaXRoIiwidHJ1ZSIsImNhbGxlZFR3aWNlIiwiZmFsc2UiLCJtb2NrIiwiZXhwZWN0YXRpb24iLCJleHBlY3RzIiwiYW5vdGhlck1ldGhvZCIsIndpdGhBcmdzIiwidmVyaWZ5Iiwic3R1YiIsInJldHVybnMiLCJkb25lIiwiUHJvbWlzZVRldENhc2UiLCJldmVudHVhbGx5Il0sInNvdXJjZXMiOlsibWV0aG9kVGVzdC5zcGVjLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE1ldGhvZENsYXNzID0gcmVxdWlyZSgnLi4vc3JjL2luZGV4JylcbmNvbnN0IG5ld09iamVjdCA9IG5ldyBNZXRob2RDbGFzcygpO1xuY29uc3QgZXhwZWN0ID0gcmVxdWlyZSgnY2hhaScpLmV4cGVjdDtcbmNvbnN0IHNpbm9uID0gcmVxdWlyZSgnc2lub24nKTtcbmNvbnN0IGNoYWlhc3Byb21pc2VkID0gcmVxdWlyZSgnY2hhaS1hcy1wcm9taXNlZCcpO1xuY29uc3QgY2hhaSA9IHJlcXVpcmUoJ2NoYWknKTtcbmNoYWkudXNlKGNoYWlhc3Byb21pc2VkKTtcblxuZGVzY3JpYmUuc2tpcCgnTWV0aG9kQ2xhc3MgVGVzdCBTdWl0JywgKCkgPT4ge1xuICAgIGl0KCdTaG91bGQgcmV0dXJuIGFkZGl0aW9uIG9mIHR3byBwYXJhbXMnLCAoKSA9PiB7XG4gICAgICAgZXhwZWN0KG5ld09iamVjdC5hZGQoMSwyKSkudG8uYmUuZXF1YWwoMylcbiAgICB9KVxuXG4gICAgLy8gc3B5IC0gbW9jayAtIHN0dWIgXG4gICAgaXQoJ1Nob3VsZCBzcHkgdGhlIGFzcyBtZXRob2QnLCAoKSA9PiB7XG4gICAgICAgY29uc3Qgc3B5ID0gc2lub24uc3B5KG5ld09iamVjdCwgJ2FkZCcpO1xuICAgICAgIGNvbnN0IGFyZzEgPSAxMDtcbiAgICAgICBjb25zdCBhcmcyID0gMjA7XG5cbiAgICAgICBuZXdPYmplY3QuYWRkKGFyZzEsIGFyZzIpO1xuICAgICAgIGV4cGVjdChzcHkuY2FsbGVkV2l0aCgxMCwyMCkpLnRvLmJlLnRydWU7XG4gICAgICAgZXhwZWN0KHNweS5jYWxsZWRUd2ljZSkudG8uYmUuZmFsc2U7XG4gICAgfSlcblxuICAgIGl0KCdTaG91bGQgbW9jayB0aGUgZ3JlZXQgZnVuY3Rpb24nLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IG1vY2sgPSBzaW5vbi5tb2NrKG5ld09iamVjdCk7XG4gICAgICAgIGNvbnN0IGV4cGVjdGF0aW9uID0gIG1vY2suZXhwZWN0cyhcImdyZWV0XCIpXG4gICAgICAgIC8vIGV4cGVjdGF0aW9uLnJldHVybnMoJ0hlbGxvIFdvcmxkIScpO1xuICAgICAgICBuZXdPYmplY3QuYW5vdGhlck1ldGhvZCgxMCwyMClcbiAgICAgICAgZXhwZWN0YXRpb24ud2l0aEFyZ3MoXCJIZWxsb1wiKTtcbiAgICAgICAgZXhwZWN0YXRpb24udmVyaWZ5KCk7XG4gICAgfSlcbn0pXG5cbmRlc2NyaWJlLnNraXAoXCJUZXN0IFN1aXQgZm9yIHN0dWJzXCIsICgpID0+IHtcbiAgICBpdCgnU2hvdWxkIHN0dWIgYWRkIG1ldGhvZCcsICgpID0+IHtcbiAgICAgIGNvbnN0IHN0dWIgPSBzaW5vbi5zdHViKG5ld09iamVjdCwgXCJhZGRcIik7XG4gICAgICBzdHViLndpdGhBcmdzKDEwLDIwKS5yZXR1cm5zKDEwMCk7XG4gICAgICBleHBlY3QobmV3T2JqZWN0LmFub3RoZXJNZXRob2QoMTAsMjApKS50by5iZS5lcXVhbCgxMDApO1xuICAgIH0pXG59KVxuXG5kZXNjcmliZShcIlByb21pc2UgVGVzdCBTdWl0IFwiLCAoKSA9PiB7XG4gICAgaXQoJ1Nob3VsZCB0ZXN0IHByb21pc2UnLCAoZG9uZSkgPT4ge1xuICAgICAgICAvLyBuZXdPYmplY3QuUHJvbWlzZVRldENhc2UoKVxuICAgICAgICAvLyAudGhlbigocmVzdWx0KT0+IHtcbiAgICAgICAgLy8gICBleHBlY3QocmVzdWx0KS50by5iZS5lcXVhbCg5KVxuICAgICAgICAvLyB9KVxuICAgICAgICBkb25lKCk7XG4gICAgICAgIHJldHVybiBleHBlY3QobmV3T2JqZWN0LlByb21pc2VUZXRDYXNlKCkpLnRvLmJlLmV2ZW50dWFsbHkuZXF1YWwoOSlcbiAgICB9KVxufSlcbiJdLCJtYXBwaW5ncyI6Iit4SEFlWTtBQUFBQSxjQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGNBQUEsR0FmWixLQUFNLENBQUFFLFdBQVcsRUFBQUYsY0FBQSxHQUFBRyxDQUFBLE1BQUdDLE9BQU8sQ0FBQyxjQUFjLENBQUMsRUFDM0MsS0FBTSxDQUFBQyxTQUFTLEVBQUFMLGNBQUEsR0FBQUcsQ0FBQSxNQUFHLEdBQUksQ0FBQUQsV0FBVyxFQUFFLEVBQ25DLEtBQU0sQ0FBQUksTUFBTSxFQUFBTixjQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDRSxNQUFNLEVBQ3JDLEtBQU0sQ0FBQUMsS0FBSyxFQUFBUCxjQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUM5QixLQUFNLENBQUFJLGNBQWMsRUFBQVIsY0FBQSxHQUFBRyxDQUFBLE1BQUdDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxFQUNsRCxLQUFNLENBQUFLLElBQUksRUFBQVQsY0FBQSxHQUFBRyxDQUFBLE1BQUdDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBQ0osY0FBQSxHQUFBRyxDQUFBLE1BQzdCTSxJQUFJLENBQUNDLEdBQUcsQ0FBQ0YsY0FBYyxDQUFDLENBQUNSLGNBQUEsR0FBQUcsQ0FBQSxNQUV6QlEsUUFBUSxDQUFDQyxJQUFJLENB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